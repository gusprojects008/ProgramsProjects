Netlink protocol and sockets: Netlink is a Linux communication protocol used for interaction between the user environment and the Linux kernel through Netlink sockets. There are different types of Netlink sockets, and each one is used for different operations in the system. In Netlink sockets, messages are used that follow a standard structure and differ according to the type of Netlink socket.

Communication occurs through Netlink sockets, where messages are sent to the kernel using system calls such as bind, send, recv, among others. The kernel returns responses through the socket created between the program (user process environment) and the kernel.

The message structure follows a standard, but values ​​such as: type, flags, commands and attributes can change according to the type of Netlink socket used and the type of message.

The most commonly used Netlink sockets are: Netlink generic: used for general Netlink operations, mainly to handle network communication through the nl80211 library.

netlink route: used to manipulate network adapter configuration, addressing, and routing.
There are others used for different operations...

netlink message packet structure:
nlmsghdr:
nlmsg_length(4 bytes),
nlmsg_type(2 bytes),
nlmsg_flags(2 bytes),
nlmsg_seq(4 bytes),
nlmsg_pid(4 bytes)

nlmsg_cmd:
cmd(1 byte)
version(1 bytes)
reserved(2 bytes)

nlattrs:
nla_len(2 bytes + length payload)
nla_type(2 bytes)
payload

This is the basic structure of a netlink message, but is need know importants details:

The nlmsg_length must be the length total from message netlink sent, is the length of all data from message: full length nlmsghdr + nlmsg_cmd + nlattrs.

A netlink message may have one or more nlattrs atributes.

Each type of socket netlink own commands and differents atrributes that must be adapteds for messages differents, netlink generic for exemple, is used for interact with kernel in differents ways, as using modules from kernel, as nl80211 that is used for does operation in network through commands and atributes passeds for kernel in a message netlink thorugh a socket netlink generic, then the kernel receives and execute the operation. The nl80211 has their own commands and attributes that must be assign to the  nlmsg from generic netlink socket.

In a messages netlink, when it is need assign a string to some nlattr or other especify field, is needed use "\x00" in the end from a string, because the linux kernel generally use languages as C for implement the protocols with netlink, and "\x00" is used for indicate the end from a string.

Data alingment, in a parse of response kernel is need know that to the receives the nla_len, nla_len must be formated/rounded to a multiple of 4, for this, is need know that multiples of 4 always own the 2 initial bit canceleds, then for this take nla_len and sum 3 do operation "AND" with the value  3 from "NOT" operation, exemple: (nla_len + 3) & (~ 3) like this nla_len is rounded for a multiple of 4 and if nla_len already gone a multiple of 4, then it won't make a difference.

This is just the basic obout netlink protocol, for more information see the documentation:
https://man7.org/linux/man-pages/man7/netlink.7.html
https://github.com/torvalds/linux/blob/master/include/uapi/linux/netlink.h#L30
https://github.com/torvalds/linux/blob/master/include/uapi/linux/rtnetlink.h
https://github.com/torvalds/linux/blob/master/include/uapi/linux/genetlink.h
https://github.com/torvalds/linux/blob/master/include/uapi/linux/nl80211.h
https://elixir.bootlin.com/linux/v4.4.109/source/include/linux/socket.h

